{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping';\nimport parseISO from 'date-fns/parseISO';\nexport let AppComponent = class AppComponent {\n  constructor(reservaService) {\n    this.reservaService = reservaService;\n    this.reserva = {};\n    this.reservas = [];\n  }\n  ngOnInit() {\n    this.findAllReservas();\n  }\n  saveReserva(form) {\n    if (this.reserva.id !== undefined) {\n      this.reservaService.update(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.createReserva(form);\n    }\n  }\n  createReserva(form) {\n    if (this.verificaDatas()) {\n      this.reservaService.create(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      alert(\"As datas estao em conflito!\");\n    }\n  }\n  findAllReservas() {\n    this.reservaService.findAll().subscribe(reservas => {\n      this.reservas = reservas;\n    });\n  }\n  cancelReserva(id) {\n    this.reservaService.cancel(id).subscribe(() => {\n      this.findAllReservas();\n    });\n  }\n  updateReserva(reserva) {\n    this.reserva = {\n      ...reserva\n    };\n  }\n  cleanForm(form) {\n    this.findAllReservas();\n    form.resetForm();\n    this.reserva = {};\n    const btnCloseDialog = document.getElementById(\"btn-close-dialog\");\n    if (btnCloseDialog) btnCloseDialog.click();\n  }\n  verificaDatas() {\n    const intervalo1 = {\n      start: parseISO(this.reserva.dataInicio.toString()),\n      end: parseISO(this.reserva.dataFim.toString())\n    };\n    for (let reserva of this.reservas) {\n      const intervalo2 = {\n        start: parseISO(reserva.dataInicio.toString()),\n        end: parseISO(reserva.dataFim.toString())\n      };\n      if (areIntervalsOverlapping(intervalo1, intervalo2) && this.reserva.id != reserva.id) return false;\n    }\n    return true;\n  }\n  abrirModal() {\n    const modal = document.querySelector(\"#dialogNewReserva\");\n    const status = document.querySelector(\"#status\");\n    if (status) status.disabled = true;\n    modal?.showModal();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","areIntervalsOverlapping","parseISO","AppComponent","constructor","reservaService","reserva","reservas","ngOnInit","findAllReservas","saveReserva","form","id","undefined","update","subscribe","cleanForm","createReserva","verificaDatas","create","alert","findAll","cancelReserva","cancel","updateReserva","resetForm","btnCloseDialog","document","getElementById","click","intervalo1","start","dataInicio","toString","end","dataFim","intervalo2","abrirModal","modal","querySelector","status","disabled","showModal","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Giovanni\\Desktop\\Dev\\hospeda\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ReservaService } from './services/reserva.service';\nimport { Reserva } from './models/reserva';\nimport { NgForm } from '@angular/forms';\nimport areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping';\nimport parseISO from 'date-fns/parseISO';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  reserva = {} as Reserva;\n  reservas: Reserva[] = [];\n\n  constructor(private reservaService: ReservaService){}\n\n  ngOnInit(): void {\n    this.findAllReservas();\n  }\n\n  saveReserva(form: NgForm) {\n    if(this.reserva.id !== undefined) {\n      this.reservaService.update(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.createReserva(form);\n    }\n  }\n\n  createReserva(form: NgForm) {\n    if(this.verificaDatas()) {\n      this.reservaService.create(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      alert(\"As datas estao em conflito!\");\n    }\n  }\n\n  findAllReservas() {\n    this.reservaService.findAll().subscribe((reservas: Reserva[]) => {\n      this.reservas = reservas;\n    });\n  }\n\n  cancelReserva(id: Number) {\n    this.reservaService.cancel(id).subscribe(() => {\n      this.findAllReservas();\n    })\n  }\n\n  updateReserva(reserva: Reserva) {\n    this.reserva = { ...reserva };\n  }\n\n  cleanForm(form: NgForm) {\n      this.findAllReservas();\n      form.resetForm();\n      this.reserva = {} as Reserva;\n      const btnCloseDialog: HTMLElement|null = document.getElementById(\"btn-close-dialog\");\n      if(btnCloseDialog) btnCloseDialog.click();\n  }\n\n  verificaDatas() {\n      const intervalo1: Interval = { start: parseISO(this.reserva.dataInicio.toString()), end: parseISO(this.reserva.dataFim.toString()) };\n      for(let reserva of this.reservas) {\n        const intervalo2: Interval = { start: parseISO(reserva.dataInicio.toString()), end: parseISO(reserva.dataFim.toString()) };\n        if(areIntervalsOverlapping(intervalo1, intervalo2) && this.reserva.id != reserva.id) return false;\n      }\n      return true;\n  }\n\n  abrirModal() {\n    const modal: HTMLDialogElement|null = document.querySelector(\"#dialogNewReserva\");\n    const status: HTMLSelectElement|null = document.querySelector(\"#status\");\n    if(status) status.disabled = true;\n    modal?.showModal();\n    \n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}