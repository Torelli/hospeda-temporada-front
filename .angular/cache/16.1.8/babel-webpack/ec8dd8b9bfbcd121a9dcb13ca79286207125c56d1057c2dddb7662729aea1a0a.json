{"ast":null,"code":"import areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/reserva.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_27_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const reserva_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.updateReserva(reserva_r12));\n    });\n    i0.ɵɵtext(15, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_27_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const reserva_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.cancelReserva(reserva_r12.id));\n    });\n    i0.ɵɵtext(17, \"Cancelar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const reserva_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.nomeHospede);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.dataInicio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.dataFim);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.quantidadePessoas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reserva_r12.status);\n  }\n}\nfunction AppComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\");\n    i0.ɵɵtext(2, \"Nome do h\\u00F3spede \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\");\n    i0.ɵɵtext(2, \"Data de chegada \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\");\n    i0.ɵɵtext(2, \"Data de partida \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\");\n    i0.ɵɵtext(2, \"Quantidade de h\\u00F3spedes \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\");\n    i0.ɵɵtext(2, \"Status \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AppComponent {\n  constructor(reservaService) {\n    this.reservaService = reservaService;\n    this.reserva = {};\n    this.reservas = [];\n  }\n  ngOnInit() {\n    this.findAllReservas();\n  }\n  createReserva(form) {\n    if (this.reserva.id !== undefined) {\n      this.reservaService.update(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.reservaService.create(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n  findAllReservas() {\n    this.reservaService.findAll().subscribe(reservas => {\n      this.reservas = reservas;\n    });\n  }\n  cancelReserva(id) {\n    this.reservaService.cancel(id).subscribe(() => {\n      this.findAllReservas();\n    });\n  }\n  updateReserva(reserva) {\n    this.reserva = {\n      ...reserva\n    };\n  }\n  cleanForm(form) {\n    this.findAllReservas();\n    form.resetForm();\n    this.reserva = {};\n  }\n  validaReserva(dataInicio, dataFim) {\n    const intervalo1 = {\n      start: dataInicio,\n      end: dataFim\n    };\n    for (let reserva of this.reservas) {\n      const intervalo2 = {\n        start: reserva.dataInicio,\n        end: reserva.dataFim\n      };\n      if (areIntervalsOverlapping(intervalo1, intervalo2)) return true;\n    }\n    return false;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ReservaService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 68,\n  vars: 26,\n  consts: [[\"aria-label\", \"breadcrumb\"], [1, \"breadcrumb\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\", \"active\"], [1, \"container\"], [1, \"card\", \"list-car\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"add-car\"], [\"id\", \"add-form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"model\"], [\"type\", \"text\", \"id\", \"model\", \"name\", \"model\", \"required\", \"\", \"placeholder\", \"Digite o nome do h\\u00F3spede\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"nomeHospede\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"color\"], [\"type\", \"date\", \"id\", \"color\", \"name\", \"color\", \"required\", \"\", \"placeholder\", \"Digite a data de chegada\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"dataInicio\", \"ngModel\"], [\"for\", \"price\"], [\"type\", \"date\", \"id\", \"price\", \"name\", \"price\", \"required\", \"\", \"placeholder\", \"Digite a data de partida\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"dataFim\", \"ngModel\"], [\"for\", \"quantidade-pessoas\"], [\"type\", \"number\", \"id\", \"quantidade-pessoas\", \"name\", \"quantidade-pessoas\", \"required\", \"\", \"placeholder\", \"Digite a quantidade de h\\u00F3spedes\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"quantidadePessoas\", \"ngModel\"], [\"for\", \"status\"], [\"type\", \"text\", \"id\", \"status\", \"name\", \"status\", \"required\", \"\", \"placeholder\", \"Digite o status da reserva\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"status\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-add-car\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"btn-add-car\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"ml-1\", 3, \"click\"], [1, \"invalid-feedback\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r16 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1)(2, \"li\", 2);\n      i0.ɵɵtext(3, \"Gerenciamento de reservas\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n      i0.ɵɵtext(7, \"Lista de reservas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"table\", 7)(10, \"thead\")(11, \"tr\")(12, \"th\", 8);\n      i0.ɵɵtext(13, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 8);\n      i0.ɵɵtext(15, \"Nome do h\\u00F3spede\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 8);\n      i0.ɵɵtext(17, \"Data de chegada\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 8);\n      i0.ɵɵtext(19, \"Data de partida\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 8);\n      i0.ɵɵtext(21, \"Quantidade de h\\u00F3spedes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 8);\n      i0.ɵɵtext(23, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\", 8);\n      i0.ɵɵtext(25, \"A\\u00E7\\u00F5es\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, AppComponent_tr_27_Template, 18, 6, \"tr\", 9);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 10)(29, \"h5\", 5);\n      i0.ɵɵtext(30, \"Adicionar/Atualizar reserva\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 6)(32, \"form\", 11, 12);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_32_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r1 = i0.ɵɵreference(33);\n        return i0.ɵɵresetView(_r1.form.valid && ctx.createReserva(_r1));\n      });\n      i0.ɵɵelementStart(34, \"div\", 13)(35, \"label\", 14);\n      i0.ɵɵtext(36, \"Nome do h\\u00F3spede\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_37_listener($event) {\n        return ctx.reserva.nomeHospede = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(39, AppComponent_div_39_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 13)(41, \"label\", 18);\n      i0.ɵɵtext(42, \"Data de chegada\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 19, 20);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.reserva.dataInicio = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(45, AppComponent_div_45_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 13)(47, \"label\", 21);\n      i0.ɵɵtext(48, \"Data de partida\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 22, 23);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_49_listener($event) {\n        return ctx.reserva.dataFim = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, AppComponent_div_51_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"div\", 13)(53, \"label\", 24);\n      i0.ɵɵtext(54, \"Quantidade de h\\u00F3spedes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"input\", 25, 26);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_55_listener($event) {\n        return ctx.reserva.quantidadePessoas = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(57, AppComponent_div_57_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"div\", 13)(59, \"label\", 27);\n      i0.ɵɵtext(60, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"input\", 28, 29);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_61_listener($event) {\n        return ctx.reserva.status = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(63, AppComponent_div_63_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"button\", 30);\n      i0.ɵɵtext(65, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"button\", 31);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_66_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r1 = i0.ɵɵreference(33);\n        return i0.ɵɵresetView(ctx.cleanForm(_r1));\n      });\n      i0.ɵɵtext(67, \"Cancelar\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(33);\n      const _r2 = i0.ɵɵreference(38);\n      const _r4 = i0.ɵɵreference(44);\n      const _r6 = i0.ɵɵreference(50);\n      const _r8 = i0.ɵɵreference(56);\n      const _r10 = i0.ɵɵreference(62);\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.reservas);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.reserva.nomeHospede)(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, _r1.submitted && _r2.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.submitted && _r2.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.reserva.dataInicio)(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, _r1.submitted && _r4.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.submitted && _r4.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.reserva.dataFim)(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, _r1.submitted && _r6.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.submitted && _r6.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.reserva.quantidadePessoas)(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, _r1.submitted && _r8.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.submitted && _r8.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.reserva.status)(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, _r1.submitted && _r10.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.submitted && _r10.invalid);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["areIntervalsOverlapping","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_tr_27_Template_button_click_14_listener","restoredCtx","ɵɵrestoreView","_r14","reserva_r12","$implicit","ctx_r13","ɵɵnextContext","ɵɵresetView","updateReserva","AppComponent_tr_27_Template_button_click_16_listener","ctx_r15","cancelReserva","id","ɵɵadvance","ɵɵtextInterpolate","nomeHospede","dataInicio","dataFim","quantidadePessoas","status","AppComponent","constructor","reservaService","reserva","reservas","ngOnInit","findAllReservas","createReserva","form","undefined","update","subscribe","cleanForm","create","findAll","cancel","resetForm","validaReserva","intervalo1","start","end","intervalo2","ɵɵdirectiveInject","i1","ReservaService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_tr_27_Template","AppComponent_Template_form_ngSubmit_32_listener","_r16","_r1","ɵɵreference","valid","AppComponent_Template_input_ngModelChange_37_listener","$event","AppComponent_div_39_Template","AppComponent_Template_input_ngModelChange_43_listener","AppComponent_div_45_Template","AppComponent_Template_input_ngModelChange_49_listener","AppComponent_div_51_Template","AppComponent_Template_input_ngModelChange_55_listener","AppComponent_div_57_Template","AppComponent_Template_input_ngModelChange_61_listener","AppComponent_div_63_Template","AppComponent_Template_button_click_66_listener","ɵɵproperty","ɵɵpureFunction1","_c0","submitted","_r2","invalid","_r4","_r6","_r8","_r10"],"sources":["C:\\Users\\Giovanni\\Desktop\\Dev\\hospeda\\src\\app\\app.component.ts","C:\\Users\\Giovanni\\Desktop\\Dev\\hospeda\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ReservaService } from './services/reserva.service';\nimport { Reserva } from './models/reserva';\nimport { NgForm } from '@angular/forms';\nimport areIntervalsOverlapping from 'date-fns/areIntervalsOverlapping'\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  reserva = {} as Reserva;\n  reservas: Reserva[] = [];\n\n  constructor(private reservaService: ReservaService){}\n\n  ngOnInit(): void {\n    this.findAllReservas();\n  }\n\n  createReserva(form: NgForm) {\n    if(this.reserva.id !== undefined) {\n      this.reservaService.update(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    } else {\n      this.reservaService.create(this.reserva).subscribe(() => {\n        this.cleanForm(form);\n      });\n    }\n  }\n\n  findAllReservas() {\n    this.reservaService.findAll().subscribe((reservas: Reserva[]) => {\n      this.reservas = reservas;\n    });\n  }\n\n  cancelReserva(id: Number) {\n    this.reservaService.cancel(id).subscribe(() => {\n      this.findAllReservas();\n    })\n  }\n\n  updateReserva(reserva: Reserva) {\n    this.reserva = { ...reserva };\n  }\n\n  cleanForm(form: NgForm) {\n      this.findAllReservas();\n      form.resetForm();\n      this.reserva = {} as Reserva;\n  }\n\n  validaReserva(dataInicio: Date, dataFim: Date) {\n      const intervalo1: { start: Date; end: Date } = { start: dataInicio, end: dataFim };\n      for(let reserva of this.reservas) {\n        const intervalo2: { start: Date; end: Date } = { start: reserva.dataInicio, end: reserva.dataFim }\n        if(areIntervalsOverlapping(intervalo1, intervalo2)) return true;\n      }\n      return false;\n  }\n}\n","<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Gerenciamento de reservas</li>\n  </ol>\n</nav>\n<div class=\"container\">\n  <div class=\"card list-car\">\n    <h5 class=\"card-header\">Lista de reservas</h5>\n    <div class=\"card-body\">\n      <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Nome do hóspede</th>\n              <th scope=\"col\">Data de chegada</th>\n              <th scope=\"col\">Data de partida</th>\n              <th scope=\"col\">Quantidade de hóspedes</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let reserva of reservas\">\n              <td>{{reserva.id}}</td>\n              <td>{{reserva.nomeHospede}}</td>\n              <td>{{reserva.dataInicio}}</td>\n              <td>{{reserva.dataFim}}</td>\n              <td>{{reserva.quantidadePessoas}}</td>\n              <td>{{reserva.status}}</td>\n              <td>\n                <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"updateReserva(reserva)\">Editar</button>\n                <button type=\"button\" class=\"btn btn-danger btn-sm ml-1\" (click)=\"cancelReserva(reserva.id)\">Cancelar</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n    </div>\n  </div>\n\n  <div class=\"card add-car\">\n      <h5 class=\"card-header\">Adicionar/Atualizar reserva</h5>\n      <div class=\"card-body\">\n          <form id=\"add-form\" (ngSubmit)=\"f.form.valid && createReserva(f)\" #f=\"ngForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"model\">Nome do hóspede</label>\n                <input type=\"text\" [(ngModel)]=\"reserva.nomeHospede\" id=\"model\" name=\"model\" #nomeHospede=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && nomeHospede.invalid }\" placeholder=\"Digite o nome do hóspede\">\n                <div *ngIf=\"f.submitted && nomeHospede.invalid\" class=\"invalid-feedback\">\n                    <div>Nome do hóspede é obrigatório</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"color\">Data de chegada</label>\n                <input type=\"date\" [(ngModel)]=\"reserva.dataInicio\" id=\"color\" name=\"color\" #dataInicio=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && dataInicio.invalid }\" placeholder=\"Digite a data de chegada\">\n                <div *ngIf=\"f.submitted && dataInicio.invalid\" class=\"invalid-feedback\">\n                    <div>Data de chegada é obrigatória</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"price\">Data de partida</label>\n                <input type=\"date\" [(ngModel)]=\"reserva.dataFim\" id=\"price\" name=\"price\" #dataFim=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && dataFim.invalid }\" placeholder=\"Digite a data de partida\">\n                <div *ngIf=\"f.submitted && dataFim.invalid\" class=\"invalid-feedback\">\n                    <div>Data de partida é obrigatória</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"quantidade-pessoas\">Quantidade de hóspedes</label>\n              <input type=\"number\" [(ngModel)]=\"reserva.quantidadePessoas\" id=\"quantidade-pessoas\" name=\"quantidade-pessoas\" #quantidadePessoas=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && quantidadePessoas.invalid }\" placeholder=\"Digite a quantidade de hóspedes\">\n              <div *ngIf=\"f.submitted && quantidadePessoas.invalid\" class=\"invalid-feedback\">\n                  <div>Quantidade de hóspedes é obrigatória</div>\n              </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"status\">Status</label>\n            <input type=\"text\" [(ngModel)]=\"reserva.status\" id=\"status\" name=\"status\" #status=\"ngModel\" required class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.submitted && status.invalid }\" placeholder=\"Digite o status da reserva\">\n            <div *ngIf=\"f.submitted && status.invalid\" class=\"invalid-feedback\">\n                <div>Status é obrigatório</div>\n            </div>\n        </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-add-car\">Salvar</button>\n            <button type=\"reset\" class=\"btn btn-secondary btn-add-car\" (click)=\"cleanForm(f)\">Cancelar</button>\n          </form>\n      </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}